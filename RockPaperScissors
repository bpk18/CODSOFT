import tkinter as tk
from tkinter import messagebox
import random

class StylishRockPaperScissors:
    def __init__(self, root):
        self.root = root
        self.root.title("Rock-Paper-Scissors")
        self.root.geometry("600x700")
        self.root.configure(bg="#2C3E50")
        self.root.resizable(False, False)

        self.user_score = 0
        self.computer_score = 0

    
        title_label = tk.Label(
            root, text="üéÆ Rock-Paper-Scissors üéÆ", font=("Helvetica", 24, "bold"), fg="#F1C40F", bg="#2C3E50"
        )
        title_label.pack(pady=20)

       
        self.choice_frame = tk.Frame(root, bg="#2C3E50")
        self.choice_frame.pack(pady=10)
        self.user_choice_label = tk.Label(self.choice_frame, text="Your Choice: ‚ùî", font=("Helvetica", 14), fg="white", bg="#2C3E50")
        self.user_choice_label.pack(side=tk.LEFT, padx=20)
        self.computer_choice_label = tk.Label(self.choice_frame, text="Computer Choice: ‚ùî", font=("Helvetica", 14), fg="white", bg="#2C3E50")
        self.computer_choice_label.pack(side=tk.LEFT, padx=20)

        
        button_frame = tk.Frame(root, bg="#2C3E50")
        button_frame.pack(pady=20)
        tk.Button(button_frame, text="‚úä Rock", font=("Helvetica", 14), command=lambda: self.play_round("Rock"), bg="#3498DB", fg="white").grid(row=0, column=0, padx=10, pady=10)
        tk.Button(button_frame, text="‚úã Paper", font=("Helvetica", 14), command=lambda: self.play_round("Paper"), bg="#E74C3C", fg="white").grid(row=0, column=1, padx=10, pady=10)
        tk.Button(button_frame, text="‚úåÔ∏è Scissors", font=("Helvetica", 14), command=lambda: self.play_round("Scissors"), bg="#2ECC71", fg="white").grid(row=0, column=2, padx=10, pady=10)

        
        self.result_label = tk.Label(root, text="", font=("Helvetica", 18, "bold"), fg="#F1C40F", bg="#2C3E50")
        self.result_label.pack(pady=20)

      
        self.score_label = tk.Label(root, text="Your Score: 0 | Computer Score: 0", font=("Helvetica", 16), fg="white", bg="#2C3E50")
        self.score_label.pack(pady=10)

        
        control_frame = tk.Frame(root, bg="#2C3E50")
        control_frame.pack(pady=20)
        tk.Button(control_frame, text="üîÑ Reset Game", font=("Helvetica", 12), command=self.reset_game, bg="#F39C12", fg="white").grid(row=0, column=0, padx=10, pady=10)
        tk.Button(control_frame, text="‚ùå Exit", font=("Helvetica", 12), command=root.quit, bg="#C0392B", fg="white").grid(row=0, column=1, padx=10, pady=10)

    def play_round(self, user_choice):
        computer_choice = random.choice(["Rock", "Paper", "Scissors"])
        self.user_choice_label.config(text=f"Your Choice: {self.get_emoji(user_choice)} {user_choice}")
        self.computer_choice_label.config(text=f"Computer Choice: {self.get_emoji(computer_choice)} {computer_choice}")

        result = self.determine_winner(user_choice, computer_choice)
        self.result_label.config(text=result)

       
        if "win" in result.lower():
            self.user_score += 1
        elif "lose" in result.lower():
            self.computer_score += 1

        self.update_scores()

    def determine_winner(self, user, computer):
        if user == computer:
            return "ü§ù It's a Tie!"
        elif (user == "Rock" and computer == "Scissors") or \
             (user == "Scissors" and computer == "Paper") or \
             (user == "Paper" and computer == "Rock"):
            return "üéâ You Win!"
        else:
            return "üò¢ You Lose!"

    def get_emoji(self, choice):
        return {"Rock": "‚úä", "Paper": "‚úã", "Scissors": "‚úåÔ∏è"}[choice]

    def update_scores(self):
        self.score_label.config(text=f"Your Score: {self.user_score} | Computer Score: {self.computer_score}")

    def reset_game(self):
        self.user_score = 0
        self.computer_score = 0
        self.user_choice_label.config(text="Your Choice: ‚ùî")
        self.computer_choice_label.config(text="Computer Choice: ‚ùî")
        self.result_label.config(text="")
        self.update_scores()


if __name__ == "__main__":
    root = tk.Tk()
    app = StylishRockPaperScissors(root)
    root.mainloop()
